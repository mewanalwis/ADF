{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "taxi-adf"
		},
		"rawconnection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'rawconnection'"
		},
		"taxi_dl_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'taxi_dl'"
		},
		"nytaxiurl_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://s3.amazonaws.com/nyc-tlc/trip+data/"
		},
		"taxi_dl_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://taxidl.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/datalake_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_load_datalake",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"yellowstaging": {
										"staging_year": "2021",
										"staging_month": "01"
									},
									"greenstaging": {
										"staging_year": "2021",
										"staging_month": "01"
									},
									"sink1": {},
									"aggregatesink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Transformation"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-09T10:39:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_load_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_green_taxi_runs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy green taxi file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_green_raw_data",
								"type": "DatasetReference",
								"parameters": {
									"source_year": {
										"value": "@pipeline().parameters.Year",
										"type": "Expression"
									},
									"source_month": {
										"value": "@pipeline().parameters.Month",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_green_staging",
								"type": "DatasetReference",
								"parameters": {
									"staging_year": {
										"value": "@pipeline().parameters.Year",
										"type": "Expression"
									},
									"staging_month": {
										"value": "@pipeline().parameters.Month",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Year": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Month": {
						"type": "string",
						"defaultValue": "02"
					}
				},
				"folder": {
					"name": "Ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-03T05:23:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_green_raw_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_green_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_taxi_runs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy taxi file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_taxi_source",
								"type": "DatasetReference",
								"parameters": {
									"source_year": {
										"value": "@pipeline().parameters.Year",
										"type": "Expression"
									},
									"source_month": {
										"value": "@pipeline().parameters.Month",
										"type": "Expression"
									},
									"taxiType": {
										"value": "@pipeline().parameters.taxiType",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_taxi_staging",
								"type": "DatasetReference",
								"parameters": {
									"staging_year": {
										"value": "@pipeline().parameters.Year",
										"type": "Expression"
									},
									"staging_month": {
										"value": "@pipeline().parameters.Month",
										"type": "Expression"
									},
									"taxiType": {
										"value": "@pipeline().parameters.taxiType",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"taxiType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-03T05:23:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_taxi_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_taxi_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_yellow_taxi_runs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy yellow taxi file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VendorID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VendorID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "tpep_pickup_datetime",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tpep_pickup_datetime",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "tpep_dropoff_datetime",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tpep_dropoff_datetime",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "passenger_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "passenger_count",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "trip_distance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "trip_distance",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RatecodeID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RatecodeID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "store_and_fwd_flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "store_and_fwd_flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PULocationID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PULocationID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOLocationID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DOLocationID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "fare_amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fare_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "extra",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "extra",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "mta_tax",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mta_tax",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "tip_amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tip_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "tolls_amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tolls_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "improvement_surcharge",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "improvement_surcharge",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "congestion_surcharge",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "congestion_surcharge",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_yellow_raw_data",
								"type": "DatasetReference",
								"parameters": {
									"source_year": {
										"value": "@pipeline().parameters.Year",
										"type": "Expression"
									},
									"source_month": {
										"value": "@pipeline().parameters.Month",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_yellow_staging",
								"type": "DatasetReference",
								"parameters": {
									"staging_year": {
										"value": "@pipeline().parameters.Year",
										"type": "Expression"
									},
									"staging_month": {
										"value": "@pipeline().parameters.Month",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Year": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Month": {
						"type": "string",
						"defaultValue": "02"
					}
				},
				"folder": {
					"name": "Ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-01T04:23:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_yellow_raw_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_yellow_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_green_raw_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nytaxiurl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"source_year": {
						"type": "String",
						"defaultValue": "2021"
					},
					"source_month": {
						"type": "String",
						"defaultValue": "01"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('green_tripdata_',dataset().source_year,'-',dataset().source_month,'.csv')",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "lpep_pickup_datetime",
						"type": "String"
					},
					{
						"name": "lpep_dropoff_datetime",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "RatecodeID",
						"type": "String"
					},
					{
						"name": "PULocationID",
						"type": "String"
					},
					{
						"name": "DOLocationID",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "extra",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "ehail_fee",
						"type": "String"
					},
					{
						"name": "improvement_surcharge",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "trip_type",
						"type": "String"
					},
					{
						"name": "congestion_surcharge",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nytaxiurl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_green_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rawconnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"staging_year": {
						"type": "String",
						"defaultValue": "2021"
					},
					"staging_month": {
						"type": "String",
						"defaultValue": "01"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('green_tripdata_',dataset().staging_year,'-',dataset().staging_month,'.csv')",
							"type": "Expression"
						},
						"folderPath": "tripdata/green",
						"container": "staging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "lpep_pickup_datetime",
						"type": "String"
					},
					{
						"name": "lpep_dropoff_datetime",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "RatecodeID",
						"type": "String"
					},
					{
						"name": "PULocationID",
						"type": "String"
					},
					{
						"name": "DOLocationID",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "extra",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "ehail_fee",
						"type": "String"
					},
					{
						"name": "improvement_surcharge",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "trip_type",
						"type": "String"
					},
					{
						"name": "congestion_surcharge",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rawconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_taxi_datalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "taxi_dl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "tripdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/taxi_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_taxi_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nytaxiurl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"source_year": {
						"type": "String"
					},
					"source_month": {
						"type": "String"
					},
					"taxiType": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().taxiType,'_tripdata_',dataset().source_year,'-',dataset().source_month,'.csv')",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "lpep_pickup_datetime",
						"type": "String"
					},
					{
						"name": "lpep_dropoff_datetime",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "RatecodeID",
						"type": "String"
					},
					{
						"name": "PULocationID",
						"type": "String"
					},
					{
						"name": "DOLocationID",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "extra",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "ehail_fee",
						"type": "String"
					},
					{
						"name": "improvement_surcharge",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "trip_type",
						"type": "String"
					},
					{
						"name": "congestion_surcharge",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nytaxiurl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_taxi_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rawconnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"staging_year": {
						"type": "String"
					},
					"staging_month": {
						"type": "String"
					},
					"taxiType": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().taxiType,'_tripdata_',dataset().staging_year,'-',dataset().staging_month,'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('tripdata/',dataset().taxiType)",
							"type": "Expression"
						},
						"container": "staging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "lpep_pickup_datetime",
						"type": "String"
					},
					{
						"name": "lpep_dropoff_datetime",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "RatecodeID",
						"type": "String"
					},
					{
						"name": "PULocationID",
						"type": "String"
					},
					{
						"name": "DOLocationID",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "extra",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "ehail_fee",
						"type": "String"
					},
					{
						"name": "improvement_surcharge",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "trip_type",
						"type": "String"
					},
					{
						"name": "congestion_surcharge",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rawconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_yellow_raw_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nytaxiurl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"source_year": {
						"type": "String",
						"defaultValue": "2021"
					},
					"source_month": {
						"type": "String",
						"defaultValue": "01"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('yellow_tripdata_',dataset().source_year,'-',dataset().source_month,'.csv')",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "tpep_pickup_datetime",
						"type": "String"
					},
					{
						"name": "tpep_dropoff_datetime",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "RatecodeID",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "PULocationID",
						"type": "String"
					},
					{
						"name": "DOLocationID",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "extra",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "improvement_surcharge",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					},
					{
						"name": "congestion_surcharge",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nytaxiurl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_yellow_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rawconnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"staging_year": {
						"type": "String",
						"defaultValue": "2021"
					},
					"staging_month": {
						"type": "String",
						"defaultValue": "01"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('yellow_tripdata_',dataset().staging_year,'-',dataset().staging_month,'.csv')",
							"type": "Expression"
						},
						"folderPath": "tripdata/yellow",
						"container": "staging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rawconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nytaxiurl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('nytaxiurl_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawconnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('rawconnection_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/taxi_dl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('taxi_dl_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('taxi_dl_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": true
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_load_datalake')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_yellow_staging",
								"type": "DatasetReference"
							},
							"name": "yellowstaging"
						},
						{
							"dataset": {
								"referenceName": "ds_green_staging",
								"type": "DatasetReference"
							},
							"name": "greenstaging"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_taxi_datalake",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "taxi_dl",
								"type": "LinkedServiceReference"
							},
							"name": "aggregatesink"
						}
					],
					"transformations": [
						{
							"name": "yellowtaxi"
						},
						{
							"name": "greentaxi"
						},
						{
							"name": "taxitripdata"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tVendorID as string,\n\t\ttpep_pickup_datetime as timestamp,\n\t\ttpep_dropoff_datetime as timestamp,\n\t\tpassenger_count as short,\n\t\ttrip_distance as double,\n\t\tRatecodeID as short,\n\t\tstore_and_fwd_flag as string,\n\t\tPULocationID as short,\n\t\tDOLocationID as short,\n\t\tpayment_type as short,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tcongestion_surcharge as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['tripdata/yellow/*']) ~> yellowstaging\nsource(output(\n\t\tVendorID as string,\n\t\tlpep_pickup_datetime as timestamp,\n\t\tlpep_dropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\tRatecodeID as short,\n\t\tPULocationID as short,\n\t\tDOLocationID as short,\n\t\tpassenger_count as short,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as string,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as short,\n\t\ttrip_type as short,\n\t\tcongestion_surcharge as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['tripdata/green/*']) ~> greenstaging\nyellowstaging derive(taxitype = 'yellow') ~> yellowtaxi\ngreenstaging derive(taxitype = 'green') ~> greentaxi\nyellowtaxi, greentaxi union(byName: true)~> taxitripdata\ntaxitripdata derive(trip_year = year(tpep_pickup_datetime),\n\t\ttrip_month = month(tpep_pickup_datetime),\n\t\tconn_status = case(store_and_fwd_flag=='Y','bad','good'),\n\t\tvendor = iif(VendorID=='1', 'CMT', 'VF')) ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(trip_year,\n\t\ttrip_month),\n\ttotal_amount = sum(total_amount)) ~> Aggregate1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> sink1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfileSystem: 'tripdata',\n\tfolderPath: 'totals',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> aggregatesink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_yellow_staging')]",
				"[concat(variables('factoryId'), '/datasets/ds_green_staging')]",
				"[concat(variables('factoryId'), '/datasets/ds_taxi_datalake')]",
				"[concat(variables('factoryId'), '/linkedServices/taxi_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_load_datalake_old')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_yellow_staging",
								"type": "DatasetReference"
							},
							"name": "yellowstaging"
						},
						{
							"dataset": {
								"referenceName": "ds_green_staging",
								"type": "DatasetReference"
							},
							"name": "greenstaging"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_taxi_datalake",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Union1"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['tripdata/yellow/*']) ~> yellowstaging\nsource(output(\n\t\tVendorID as string,\n\t\tlpep_pickup_datetime as string,\n\t\tlpep_dropoff_datetime as string,\n\t\tstore_and_fwd_flag as string,\n\t\tRatecodeID as string,\n\t\tPULocationID as string,\n\t\tDOLocationID as string,\n\t\tpassenger_count as string,\n\t\ttrip_distance as string,\n\t\tfare_amount as string,\n\t\textra as string,\n\t\tmta_tax as string,\n\t\ttip_amount as string,\n\t\ttolls_amount as string,\n\t\tehail_fee as string,\n\t\timprovement_surcharge as string,\n\t\ttotal_amount as string,\n\t\tpayment_type as string,\n\t\ttrip_type as string,\n\t\tcongestion_surcharge as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['tripdata/green/*']) ~> greenstaging\nyellowstaging derive(taxitype = 'yellow') ~> DerivedColumn1\ngreenstaging derive(taxitype = 'green') ~> DerivedColumn2\nDerivedColumn1, DerivedColumn2 union(byName: true)~> Union1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('roundRobin', 4)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_yellow_staging')]",
				"[concat(variables('factoryId'), '/datasets/ds_green_staging')]",
				"[concat(variables('factoryId'), '/datasets/ds_taxi_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}